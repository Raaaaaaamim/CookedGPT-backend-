import { GoogleGenAI } from "@google/genai";

const GEMINI_API_KEY = process.env.GEMINI_API_KEY;

if (!GEMINI_API_KEY) {
  throw new Error("GEMINI_API_KEY is not set in environment variables.");
}

const ai = new GoogleGenAI({ apiKey: GEMINI_API_KEY });

interface Props {
  model?: string;
  prompt: string;
}

const useGemini = async ({
  model = "gemini-2.0-flash",
  prompt,
}: Props): Promise<string> => {
  try {
    const response = await ai.models.generateContent({
      model,
      contents: prompt,
    });

    // Check if response contains text
    if (!response.text) {
      throw new Error("No text generated by the model.");
    }

    return response.text.trim();
  } catch (error: any) {
    console.error("Error generating content with Gemini:", error);
    throw new Error(`Failed to generate content: ${error.message}`);
  }
};

export default useGemini;
