// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username        String            @unique
  fullName        String
  clerkId         String            @unique
  transformations Transformations[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  apiKeys         Keys[]
  Tags            Tag[]
}

model Tag {
  id        String   @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  prompt    String
  authorId  String   @unique @db.Uuid
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Keys {
  id        String   @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  apiKey    String
  authorId  String   @unique @db.Uuid
  author    User     @relation(fields: [authorId], references: [id])
  model     Model    @relation(fields: [modelId], references: [id])
  type      Type
  modelId   String   @unique @db.Uuid // Add @db.Uuid here to match Model.id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transformations {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  authorId  String   @db.Uuid
  author    User     @relation(fields: [authorId], references: [id])
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tags      String[]
}

model Model {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  fullName  String   @unique
  apiKey    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  type      Type
  Keys      Keys?
}

enum Type {
  OPENAI
  OPENROUTER
  GEMINI
}
